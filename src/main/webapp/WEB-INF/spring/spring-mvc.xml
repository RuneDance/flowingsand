<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- spring可以自动去扫描base-package下面或者子包下面的java文件， 如果扫描到有@Component @Controller 
		@Service @Repository等这些注解的类，则把这些类注册为bean -->
	<context:component-scan base-package="com.flowingsand.*" />

	<!--<mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与 AnnotationMethodHandlerAdapter 
		两个bean,它解决了一些@controllerz注解使用时的提前配置 -->
	<mvc:annotation-driven />
	<!-- <mvc:annotation-driven>
	    <mvc:message-converters>
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	        <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
	        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
	    </mvc:message-converters>
	</mvc:annotation-driven> -->
	<!-- 模型解析，在请求时为模型视图名称添加前后缀 比如在controller类中需要请求/WEB-INF/page/index.jsp文件，直接写index就可以了 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
		
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes --> 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	      <property name="maxUploadSize" value="10485760" /> 
	</bean>
	<mvc:interceptors>
		<!-- 配置拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<bean class="com.flowingsand.filter.LoginFilter" />
		</mvc:interceptor>
		<!-- 配置Token -->
		<mvc:interceptor>  
            <mvc:mapping path="/**"/>
            <bean class="com.flowingsand.utils.TokenInterceptor" />  
        </mvc:interceptor>  
	</mvc:interceptors>
</beans>
